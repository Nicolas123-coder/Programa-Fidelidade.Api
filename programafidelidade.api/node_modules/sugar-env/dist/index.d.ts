import Environments from './structures/environments';
declare type Nullable<T> = T | null;
declare const has: (name: string) => Boolean;
declare function get(names: string[] | string): Nullable<string>;
declare namespace get {
    var base64: {
        (names: string | string[]): Nullable<string>;
        (names: string | string[], fallback: string): string;
    };
    var boolean: {
        (names: string | string[]): Nullable<boolean>;
        (names: string | string[], fallback: boolean): boolean;
    };
    var int: {
        (names: string | string[]): Nullable<number>;
        (names: string | string[], fallback: number): number;
    };
    var float: {
        (names: string | string[]): Nullable<number>;
        (names: string | string[], fallback: number): number;
    };
    var url: {
        (names: string | string[]): Nullable<string>;
        (names: string | string[], fallback: string): string;
    };
}
declare function get<T>(names: string[] | string, fallback: T): T;
declare namespace get {
    var base64: {
        (names: string | string[]): Nullable<string>;
        (names: string | string[], fallback: string): string;
    };
    var boolean: {
        (names: string | string[]): Nullable<boolean>;
        (names: string | string[], fallback: boolean): boolean;
    };
    var int: {
        (names: string | string[]): Nullable<number>;
        (names: string | string[], fallback: number): number;
    };
    var float: {
        (names: string | string[]): Nullable<number>;
        (names: string | string[], fallback: number): number;
    };
    var url: {
        (names: string | string[]): Nullable<string>;
        (names: string | string[], fallback: string): string;
    };
}
declare const current: string;
declare const is: (environment: Environments) => Boolean;
declare const entrypoint: {
    (current: Environments): {
        is: (x: Environments) => boolean;
    };
    is: (environment: Environments) => Boolean;
    get: typeof get;
    has: (name: string) => Boolean;
    current: string;
    TEST: Environments;
    REVIEW: Environments;
    STAGING: Environments;
    PRODUCTION: Environments;
    DEVELOPMENT: Environments;
};
declare const TEST = Environments.TEST;
declare const REVIEW = Environments.REVIEW;
declare const STAGING = Environments.STAGING;
declare const PRODUCTION = Environments.PRODUCTION;
declare const DEVELOPMENT = Environments.DEVELOPMENT;
export { has, get, is, current, TEST, REVIEW, STAGING, PRODUCTION, DEVELOPMENT };
export default entrypoint;
